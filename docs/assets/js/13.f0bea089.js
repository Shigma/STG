(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{63:function(t,r,v){"use strict";v.r(r);var a=v(1),e=Object(a.a)({},function(){var t=this,r=t.$createElement,v=t._self._c||r;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"更新日志"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#更新日志","aria-hidden":"true"}},[t._v("#")]),t._v(" 更新日志")]),t._v(" "),v("h2",{attrs:{id:"v0-3-1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v0-3-1","aria-hidden":"true"}},[t._v("#")]),t._v(" v0.3.1")]),t._v(" "),v("h3",{attrs:{id:"新特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#新特性","aria-hidden":"true"}},[t._v("#")]),t._v(" 新特性")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("core:")]),t._v(" 新增 "),v("code",[t._v("loadImages")]),t._v(" 和 "),v("code",[t._v("loadAssets")]),t._v(" 方法, 用于加载全局资源.")])]),t._v(" "),v("h3",{attrs:{id:"修复与其他"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#修复与其他","aria-hidden":"true"}},[t._v("#")]),t._v(" 修复与其他")]),t._v(" "),v("p",[t._v("打包时将生成多个入口文件:")]),t._v(" "),v("ul",[v("li",[t._v("stg.min.css: 所需的样式文件.")]),t._v(" "),v("li",[t._v("stg.common.js: 可直接在 NodeJS 环境下加载的模块.")]),t._v(" "),v("li",[t._v("stg.runtime.js: 应当在浏览器中加载使用的模块, 内置了所需的样式.")])]),t._v(" "),v("h2",{attrs:{id:"v0-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v0-3","aria-hidden":"true"}},[t._v("#")]),t._v(" v0.3")]),t._v(" "),v("h3",{attrs:{id:"重大变化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#重大变化","aria-hidden":"true"}},[t._v("#")]),t._v(" 重大变化")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("core:")]),t._v(" Looping 不再是 EventTarget 的子类, 对应的事件全部改用 "),v("code",[t._v("onPause")]),t._v(" 等属性来实现.")]),t._v(" "),v("li",[v("strong",[t._v("core:")]),t._v(" Looping 类的 onUpdate 事件更改为 onStats, 同时增加 "),v("code",[t._v("statsInterval")]),t._v(" 属性用于控制其触发频率.")]),t._v(" "),v("li",[v("strong",[t._v("core:")]),t._v(" 移除 "),v("code",[t._v("looping.resume()")]),t._v(" 等方法中的 "),v("code",[t._v("slient")]),t._v(" 参数.")])]),t._v(" "),v("h3",{attrs:{id:"新特性-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#新特性-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 新特性")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("core:")]),t._v(" Looping 构造函数新增 "),v("code",[t._v("skipFrame")]),t._v(" 参数, 可用于调整描画间隔.")]),t._v(" "),v("li",[v("strong",[t._v("core:")]),t._v(" 新增 "),v("code",[t._v("looping.initialize()")]),t._v(" 方法, 可以用于重新初始化实例.")]),t._v(" "),v("li",[v("strong",[t._v("core:")]),t._v(" 新增 "),v("code",[t._v("core.config.angleUnit")]),t._v(", 用于配置采用的角度单位, 默认为 "),v("code",[t._v("Math.PI")]),t._v(".")]),t._v(" "),v("li",[v("strong",[t._v("core:")]),t._v(" "),v("code",[t._v("looping.getStatus()")]),t._v(" 返回对象新增 "),v("code",[t._v("frameRate")]),t._v(" 属性, 表示当前物理帧数.")])]),t._v(" "),v("h2",{attrs:{id:"v0-2-1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v0-2-1","aria-hidden":"true"}},[t._v("#")]),t._v(" v0.2.1")]),t._v(" "),v("h3",{attrs:{id:"重大变化-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#重大变化-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 重大变化")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("core:")]),t._v(" 移除 Bullet 构造函数的 "),v("code",[t._v("rel")]),t._v(" 属性, 改为 "),v("code",[t._v("origin")]),t._v(", 同时支持传入 Point 类型.")]),t._v(" "),v("li",[v("strong",[t._v("utils:")]),t._v(" 将库 utils.Random 更改为 random.")])]),t._v(" "),v("h3",{attrs:{id:"新特性-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#新特性-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 新特性")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("core:")]),t._v(" 加入了默认的自机判定点颜色和大小.")]),t._v(" "),v("li",[v("strong",[t._v("core:")]),t._v(" 当调用 "),v("code",[t._v("scene.setBarrage")]),t._v(" 方法时会自动清屏.")]),t._v(" "),v("li",[v("strong",[t._v("utils:")]),t._v(" 新增库 utils.color, 用于处理颜色.")])]),t._v(" "),v("h2",{attrs:{id:"v0-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v0-2","aria-hidden":"true"}},[t._v("#")]),t._v(" v0.2")]),t._v(" "),v("h3",{attrs:{id:"新特性-4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#新特性-4","aria-hidden":"true"}},[t._v("#")]),t._v(" 新特性")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("core:")]),t._v(" 支持无自机模式 (观赏模式). 当不涉及自机时, 子弹会跳过碰撞判定.")]),t._v(" "),v("li",[v("strong",[t._v("core:")]),t._v(" 自机新增属性 "),v("code",[t._v("control")]),t._v(", 用来决定是鼠标操控还是键盘操控.")]),t._v(" "),v("li",[v("strong",[t._v("core:")]),t._v(" 类 Field 的大部分功能由新类 Scene 完成, 前者保留对外层 DOM 的控制.")]),t._v(" "),v("li",[v("strong",[t._v("utils:")]),t._v(" 将 math 和 memorize 相关函数转移到 @stg/utils 下.")])]),t._v(" "),v("h3",{attrs:{id:"修复和其他"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#修复和其他","aria-hidden":"true"}},[t._v("#")]),t._v(" 修复和其他")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("core:")]),t._v(" 修复了 "),v("code",[t._v("point.$coord")]),t._v(" 不及时更新的问题.")]),t._v(" "),v("li",[v("strong",[t._v("bundle:")]),t._v(" 生成了源代码的 source map.")])])])},[],!1,null,null,null);r.default=e.exports}}]);